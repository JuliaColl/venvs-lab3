[
    {
        "id": 0,
        "name": "Projectile motion",
        "walkarea": [400, 400],
        "scale": 400, 
        "exits": [
            {
               "position": [12, -102],
               "size": [146, 20],
               "toRoomId": 3,
               "spawnPos": [34, 90]
            }
         ],

        "demo": 
            {
                "static_objects" : [
                    {
                        "position": [140, 10, 120],
                        "mesh": "cube",
                        "color": [0, 1, 0, 1],
                        "scaling": [10, 10, 10],
                        "name": "parabolic"
                    }
                ], 
                
                "dynamic_object" : {
                    "velocity" : [-20, 30, 1],
                    "position" : [-115, 10, -130],
                    "params": 
                    {
                        "a" : 
                        {
                            "value" :-9.89,
                            "description": "Acceleration (m/&sup2;)"
                        },

                        "v0" : 
                        {
                            "value" : 50,
                            "description": "Initial velocity (v/s)"
                        },

                        "alpha" : 
                        {
                            "value" : 0.8,
                            "description": "Inclination angle (rad)"
                        }
                    },

                    "node": 
                    {
                        "position": [-115, 10, -130],
                        "mesh": "cube",
                        "color": [1, 0, 0, 1],
                        "scaling": [10, 10, 10],
                        "name": "parabolic",
                        "id" : "parabolic"
                    },

                    "update" : "function (dt){\n            const sdt = dt * 5;\n            this.node.position[0] = this.node.position[0] + this.velocity[0] * sdt;\n            this.node.position[1] = this.node.position[1] + this.velocity[1] * sdt + 1 / 2 * this.params.a.value * sdt * sdt;\n            this.node.position[2] = this.node.position[2] + this.velocity[2] * sdt;\n            this.velocity[1] = this.velocity[1] + this.params.a.value * sdt;\n            this.node.position = [...this.node.position];\n\n            if (this.node.position[1] < -10){\n                this.restart()\n            }\n\n            return this.node.position;\n}",
                    "restart" : "function (){\n                this.node.position = [...this.position];\n                this.velocity = [this.params.v0.value*Math.cos(this.params.alpha), this.params.v0.value*Math.sin(this.params.alpha), 0];\n        }",
                    "setParams" : "function (params){\n            this.params.a.value = params.a;\n            this.params.v0.value = params.v0;\n            this.params.alpha = params.alpha;\n            this.restart();\n        }"
                }

                
            }
         
    }
]